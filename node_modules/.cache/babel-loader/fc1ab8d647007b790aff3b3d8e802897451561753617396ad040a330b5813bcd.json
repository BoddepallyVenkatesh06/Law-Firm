{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"onEntering\"],\n  _excluded2 = [\"autoFocus\", \"children\", \"className\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useSlotProps } from '@mui/base/utils';\nimport { HTMLElementType } from '@mui/utils';\nimport MenuList from '../MenuList';\nimport Popover, { PopoverPaper } from '../Popover';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getMenuUtilityClass } from './menuClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nvar LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\nvar MenuRoot = styled(Popover, {\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return rootShouldForwardProp(prop) || prop === 'classes';\n  },\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})({});\nexport var MenuPaper = styled(PopoverPaper, {\n  name: 'MuiMenu',\n  slot: 'Paper',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.paper;\n  }\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nvar MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.list;\n  }\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nvar Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  var _slots$paper, _slotProps$paper;\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n  var _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n    children = props.children,\n    className = props.className,\n    _props$disableAutoFoc = props.disableAutoFocusItem,\n    disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n    _props$MenuListProps = props.MenuListProps,\n    MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\n    onClose = props.onClose,\n    open = props.open,\n    _props$PaperProps = props.PaperProps,\n    PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n    PopoverClasses = props.PopoverClasses,\n    _props$transitionDura = props.transitionDuration,\n    transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\n    _props$TransitionProp = props.TransitionProps,\n    _props$TransitionProp2 = _props$TransitionProp === void 0 ? {} : _props$TransitionProp,\n    onEntering = _props$TransitionProp2.onEntering,\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  var theme = useTheme();\n  var isRtl = theme.direction === 'rtl';\n  var ownerState = _extends({}, props, {\n    autoFocus: autoFocus,\n    disableAutoFocusItem: disableAutoFocusItem,\n    MenuListProps: MenuListProps,\n    onEntering: onEntering,\n    PaperProps: PaperProps,\n    transitionDuration: transitionDuration,\n    TransitionProps: TransitionProps,\n    variant: variant\n  });\n  var classes = useUtilityClasses(ownerState);\n  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  var menuListActionsRef = React.useRef(null);\n  var handleEntering = function handleEntering(element, isAppearing) {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n  var activeItemIndex = -1;\n  // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n  React.Children.map(children, function (child, index) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  var PaperSlot = (_slots$paper = slots.paper) != null ? _slots$paper : MenuPaper;\n  var paperExternalSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : PaperProps;\n  var rootSlotProps = useSlotProps({\n    elementType: slots.root,\n    externalSlotProps: slotProps.root,\n    ownerState: ownerState,\n    className: [classes.root, className]\n  });\n  var paperSlotProps = useSlotProps({\n    elementType: PaperSlot,\n    externalSlotProps: paperExternalSlotProps,\n    ownerState: ownerState,\n    className: classes.paper\n  });\n  return /*#__PURE__*/_jsx(MenuRoot, _extends({\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    slots: {\n      paper: PaperSlot,\n      root: slots.root\n    },\n    slotProps: {\n      root: rootSlotProps,\n      paper: paperSlotProps\n    },\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    TransitionProps: _extends({\n      onEntering: handleEntering\n    }, TransitionProps),\n    ownerState: ownerState\n  }, other, {\n    classes: PopoverClasses,\n    children: /*#__PURE__*/_jsx(MenuMenuList, _extends({\n      onKeyDown: handleListKeyDown,\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant\n    }, MenuListProps, {\n      className: clsx(classes.list, MenuListProps.className),\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n  /**\n   * Props applied to the [`MenuList`](/material-ui/api/menu-list/) element.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * `classes` prop applied to the [`Popover`](/material-ui/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    paper: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","isFragment","PropTypes","clsx","unstable_composeClasses","composeClasses","useSlotProps","HTMLElementType","MenuList","Popover","PopoverPaper","styled","rootShouldForwardProp","useTheme","useThemeProps","getMenuUtilityClass","jsx","_jsx","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","useUtilityClasses","ownerState","classes","slots","root","paper","list","MenuRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","MenuPaper","maxHeight","WebkitOverflowScrolling","MenuMenuList","outline","Menu","forwardRef","inProps","ref","_slots$paper","_slotProps$paper","_props$autoFocus","autoFocus","children","className","_props$disableAutoFoc","disableAutoFocusItem","_props$MenuListProps","MenuListProps","onClose","open","_props$PaperProps","PaperProps","PopoverClasses","_props$transitionDura","transitionDuration","_props$TransitionProp","TransitionProps","_props$TransitionProp2","onEntering","_props$variant","variant","_props$slots","_props$slotProps","slotProps","other","theme","isRtl","direction","autoFocusItem","menuListActionsRef","useRef","handleEntering","element","isAppearing","current","adjustStyleForScrollbar","handleListKeyDown","event","key","preventDefault","activeItemIndex","Children","map","child","index","isValidElement","process","env","NODE_ENV","console","error","join","disabled","selected","PaperSlot","paperExternalSlotProps","rootSlotProps","elementType","externalSlotProps","paperSlotProps","anchorOrigin","transformOrigin","onKeyDown","actions","propTypes","anchorEl","oneOfType","func","bool","node","object","string","isRequired","shape","sx","arrayOf","oneOf","number","appear","enter","exit"],"sources":["/Users/venkykumar/Desktop/Law_Firm_Landing_Page/node_modules/@mui/material/Menu/Menu.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onEntering\"],\n  _excluded2 = [\"autoFocus\", \"children\", \"className\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useSlotProps } from '@mui/base/utils';\nimport { HTMLElementType } from '@mui/utils';\nimport MenuList from '../MenuList';\nimport Popover, { PopoverPaper } from '../Popover';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getMenuUtilityClass } from './menuClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\nconst MenuRoot = styled(Popover, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nexport const MenuPaper = styled(PopoverPaper, {\n  name: 'MuiMenu',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nconst MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List',\n  overridesResolver: (props, styles) => styles.list\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  var _slots$paper, _slotProps$paper;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n  const {\n      autoFocus = true,\n      children,\n      className,\n      disableAutoFocusItem = false,\n      MenuListProps = {},\n      onClose,\n      open,\n      PaperProps = {},\n      PopoverClasses,\n      transitionDuration = 'auto',\n      TransitionProps: {\n        onEntering\n      } = {},\n      variant = 'selectedMenu',\n      slots = {},\n      slotProps = {}\n    } = props,\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n  let activeItemIndex = -1;\n  // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const PaperSlot = (_slots$paper = slots.paper) != null ? _slots$paper : MenuPaper;\n  const paperExternalSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : PaperProps;\n  const rootSlotProps = useSlotProps({\n    elementType: slots.root,\n    externalSlotProps: slotProps.root,\n    ownerState,\n    className: [classes.root, className]\n  });\n  const paperSlotProps = useSlotProps({\n    elementType: PaperSlot,\n    externalSlotProps: paperExternalSlotProps,\n    ownerState,\n    className: classes.paper\n  });\n  return /*#__PURE__*/_jsx(MenuRoot, _extends({\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    slots: {\n      paper: PaperSlot,\n      root: slots.root\n    },\n    slotProps: {\n      root: rootSlotProps,\n      paper: paperSlotProps\n    },\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    TransitionProps: _extends({\n      onEntering: handleEntering\n    }, TransitionProps),\n    ownerState: ownerState\n  }, other, {\n    classes: PopoverClasses,\n    children: /*#__PURE__*/_jsx(MenuMenuList, _extends({\n      onKeyDown: handleListKeyDown,\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant\n    }, MenuListProps, {\n      className: clsx(classes.list, MenuListProps.className),\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n  /**\n   * Props applied to the [`MenuList`](/material-ui/api/menu-list/) element.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * `classes` prop applied to the [`Popover`](/material-ui/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    paper: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}