{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { DropdownActionTypes } from '../useDropdown/useDropdown.types';\nimport { useButton } from '../useButton/useButton';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuButton API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-button)\n */\nexport function useMenuButton() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _parameters$disabled = parameters.disabled,\n    disabled = _parameters$disabled === void 0 ? false : _parameters$disabled,\n    focusableWhenDisabled = parameters.focusableWhenDisabled,\n    externalRef = parameters.rootRef;\n  var menuContext = React.useContext(DropdownContext);\n  if (menuContext === null) {\n    throw new Error('useMenuButton: no menu context available.');\n  }\n  var state = menuContext.state,\n    dispatch = menuContext.dispatch,\n    registerTrigger = menuContext.registerTrigger,\n    popupId = menuContext.popupId;\n  var _useButton = useButton({\n      disabled: disabled,\n      focusableWhenDisabled: focusableWhenDisabled,\n      rootRef: externalRef\n    }),\n    getButtonRootProps = _useButton.getRootProps,\n    buttonRootRef = _useButton.rootRef,\n    active = _useButton.active;\n  var handleRef = useForkRef(buttonRootRef, registerTrigger);\n  var createHandleClick = function createHandleClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic;\n      (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n      dispatch({\n        type: DropdownActionTypes.toggle,\n        event: event\n      });\n    };\n  };\n  var createHandleKeyDown = function createHandleKeyDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyD;\n      (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n      if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n        event.preventDefault();\n        dispatch({\n          type: DropdownActionTypes.open,\n          event: event\n        });\n      }\n    };\n  };\n  var getOwnRootProps = function getOwnRootProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      onClick: createHandleClick(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers)\n    };\n  };\n  var getRootProps = function getRootProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var getCombinedProps = combineHooksSlotProps(getButtonRootProps, getOwnRootProps);\n    return _extends({}, getCombinedProps(otherHandlers), {\n      'aria-haspopup': 'menu',\n      'aria-expanded': state.open,\n      'aria-controls': popupId,\n      ref: handleRef\n    });\n  };\n  return {\n    active: active,\n    getRootProps: getRootProps,\n    open: state.open,\n    rootRef: handleRef\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","DropdownContext","DropdownActionTypes","useButton","combineHooksSlotProps","useMenuButton","parameters","arguments","length","undefined","_parameters$disabled","disabled","focusableWhenDisabled","externalRef","rootRef","menuContext","useContext","Error","state","dispatch","registerTrigger","popupId","_useButton","getButtonRootProps","getRootProps","buttonRootRef","active","handleRef","createHandleClick","otherHandlers","event","_otherHandlers$onClic","onClick","call","defaultMuiPrevented","type","toggle","createHandleKeyDown","_otherHandlers$onKeyD","onKeyDown","key","preventDefault","open","getOwnRootProps","getCombinedProps","ref"],"sources":["/Users/venkykumar/Desktop/Law_Firm_Landing_Page/node_modules/@mui/base/useMenuButton/useMenuButton.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { DropdownActionTypes } from '../useDropdown/useDropdown.types';\nimport { useButton } from '../useButton/useButton';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuButton API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-button)\n */\nexport function useMenuButton(parameters = {}) {\n  const {\n    disabled = false,\n    focusableWhenDisabled,\n    rootRef: externalRef\n  } = parameters;\n  const menuContext = React.useContext(DropdownContext);\n  if (menuContext === null) {\n    throw new Error('useMenuButton: no menu context available.');\n  }\n  const {\n    state,\n    dispatch,\n    registerTrigger,\n    popupId\n  } = menuContext;\n  const {\n    getRootProps: getButtonRootProps,\n    rootRef: buttonRootRef,\n    active\n  } = useButton({\n    disabled,\n    focusableWhenDisabled,\n    rootRef: externalRef\n  });\n  const handleRef = useForkRef(buttonRootRef, registerTrigger);\n  const createHandleClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n    (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    dispatch({\n      type: DropdownActionTypes.toggle,\n      event\n    });\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      dispatch({\n        type: DropdownActionTypes.open,\n        event\n      });\n    }\n  };\n  const getOwnRootProps = (otherHandlers = {}) => ({\n    onClick: createHandleClick(otherHandlers),\n    onKeyDown: createHandleKeyDown(otherHandlers)\n  });\n  const getRootProps = (otherHandlers = {}) => {\n    const getCombinedProps = combineHooksSlotProps(getButtonRootProps, getOwnRootProps);\n    return _extends({}, getCombinedProps(otherHandlers), {\n      'aria-haspopup': 'menu',\n      'aria-expanded': state.open,\n      'aria-controls': popupId,\n      ref: handleRef\n    });\n  };\n  return {\n    active,\n    getRootProps,\n    open: state.open,\n    rootRef: handleRef\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}