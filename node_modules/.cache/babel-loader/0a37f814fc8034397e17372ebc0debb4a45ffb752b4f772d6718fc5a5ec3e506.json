{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"disabled\", \"label\", \"slots\", \"slotProps\", \"focusableWhenDisabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport { useMenuButton } from '../useMenuButton';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { getMenuButtonUtilityClass } from './menuButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var active = ownerState.active,\n    disabled = ownerState.disabled,\n    open = ownerState.open;\n  var slots = {\n    root: ['root', disabled && 'disabled', active && 'active', open && 'expanded']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuButtonUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuButton API](https://mui.com/base-ui/react-menu/components-api/#menu-button)\n */\nvar MenuButton = /*#__PURE__*/React.forwardRef(function MenuButton(props, forwardedRef) {\n  var children = props.children,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    _props$focusableWhenD = props.focusableWhenDisabled,\n    focusableWhenDisabled = _props$focusableWhenD === void 0 ? false : _props$focusableWhenD,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useMenuButton = useMenuButton({\n      disabled: disabled,\n      focusableWhenDisabled: focusableWhenDisabled,\n      rootRef: forwardedRef\n    }),\n    getRootProps = _useMenuButton.getRootProps,\n    open = _useMenuButton.open,\n    active = _useMenuButton.active;\n  var ownerState = _extends({}, props, {\n    open: open,\n    active: active,\n    disabled: disabled,\n    focusableWhenDisabled: focusableWhenDisabled\n  });\n  var classes = useUtilityClasses(ownerState);\n  var Root = slots.root || 'button';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref: forwardedRef,\n      type: 'button'\n    },\n    ownerState: ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, allows a disabled button to receive focus.\n   * @default false\n   */\n  focusableWhenDisabled: PropTypes.bool,\n  /**\n   * Label of the button\n   */\n  label: PropTypes.string,\n  /**\n   * The components used for each slot inside the MenuButton.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The props used for each slot inside the MenuButton.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { MenuButton };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","useSlotProps","useMenuButton","unstable_composeClasses","composeClasses","useClassNamesOverride","getMenuButtonUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","active","disabled","open","slots","root","MenuButton","forwardRef","props","forwardedRef","children","_props$disabled","_props$slots","_props$slotProps","slotProps","_props$focusableWhenD","focusableWhenDisabled","other","_useMenuButton","rootRef","getRootProps","classes","Root","rootProps","elementType","getSlotProps","externalForwardedProps","externalSlotProps","additionalProps","ref","type","className","process","env","NODE_ENV","propTypes","node","string","bool","label","shape","oneOfType","func","object"],"sources":["/Users/venkykumar/Desktop/Law_Firm_Landing_Page/node_modules/@mui/base/MenuButton/MenuButton.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"slots\", \"slotProps\", \"focusableWhenDisabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport { useMenuButton } from '../useMenuButton';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { getMenuButtonUtilityClass } from './menuButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    active,\n    disabled,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', active && 'active', open && 'expanded']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuButtonUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuButton API](https://mui.com/base-ui/react-menu/components-api/#menu-button)\n */\nconst MenuButton = /*#__PURE__*/React.forwardRef(function MenuButton(props, forwardedRef) {\n  const {\n      children,\n      disabled = false,\n      slots = {},\n      slotProps = {},\n      focusableWhenDisabled = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    open,\n    active\n  } = useMenuButton({\n    disabled,\n    focusableWhenDisabled,\n    rootRef: forwardedRef\n  });\n  const ownerState = _extends({}, props, {\n    open,\n    active,\n    disabled,\n    focusableWhenDisabled\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = slots.root || 'button';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref: forwardedRef,\n      type: 'button'\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, allows a disabled button to receive focus.\n   * @default false\n   */\n  focusableWhenDisabled: PropTypes.bool,\n  /**\n   * Label of the button\n   */\n  label: PropTypes.string,\n  /**\n   * The components used for each slot inside the MenuButton.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The props used for each slot inside the MenuButton.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { MenuButton };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}