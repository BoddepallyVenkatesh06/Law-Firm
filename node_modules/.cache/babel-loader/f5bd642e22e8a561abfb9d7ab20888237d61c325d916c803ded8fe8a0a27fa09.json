{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { useDropdown } from '../useDropdown/useDropdown';\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [Dropdown API](https://mui.com/base-ui/react-menu/components-api/#dropdown)\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Dropdown(props) {\n  var children = props.children,\n    open = props.open,\n    defaultOpen = props.defaultOpen,\n    onOpenChange = props.onOpenChange;\n  var _useDropdown = useDropdown({\n      defaultOpen: defaultOpen,\n      onOpenChange: onOpenChange,\n      open: open\n    }),\n    contextValue = _useDropdown.contextValue;\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? Dropdown.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the dropdown is initially open.\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * Callback fired when the component requests to be opened or closed.\n   */\n  onOpenChange: PropTypes.func,\n  /**\n   * Allows to control whether the dropdown is open.\n   * This is a controlled counterpart of `defaultOpen`.\n   */\n  open: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Dropdown['propTypes' + ''] = exactProp(Dropdown.propTypes);\n}\nexport { Dropdown };","map":{"version":3,"names":["React","PropTypes","exactProp","DropdownContext","useDropdown","jsx","_jsx","Dropdown","props","children","open","defaultOpen","onOpenChange","_useDropdown","contextValue","Provider","value","process","env","NODE_ENV","propTypes","node","bool","func"],"sources":["/Users/venkykumar/Desktop/Law_Firm_Landing_Page/node_modules/@mui/base/Dropdown/Dropdown.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { useDropdown } from '../useDropdown/useDropdown';\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [Dropdown API](https://mui.com/base-ui/react-menu/components-api/#dropdown)\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Dropdown(props) {\n  const {\n    children,\n    open,\n    defaultOpen,\n    onOpenChange\n  } = props;\n  const {\n    contextValue\n  } = useDropdown({\n    defaultOpen,\n    onOpenChange,\n    open\n  });\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? Dropdown.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the dropdown is initially open.\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * Callback fired when the component requests to be opened or closed.\n   */\n  onOpenChange: PropTypes.func,\n  /**\n   * Allows to control whether the dropdown is open.\n   * This is a controlled counterpart of `defaultOpen`.\n   */\n  open: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Dropdown['propTypes' + ''] = exactProp(Dropdown.propTypes);\n}\nexport { Dropdown };"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,WAAW,QAAQ,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,QAAQA,CAACC,KAAK,EAAE;EACvB,IACEC,QAAQ,GAIND,KAAK,CAJPC,QAAQ;IACRC,IAAI,GAGFF,KAAK,CAHPE,IAAI;IACJC,WAAW,GAETH,KAAK,CAFPG,WAAW;IACXC,YAAY,GACVJ,KAAK,CADPI,YAAY;EAEd,IAAAC,YAAA,GAEIT,WAAW,CAAC;MACdO,WAAW,EAAXA,WAAW;MACXC,YAAY,EAAZA,YAAY;MACZF,IAAI,EAAJA;IACF,CAAC,CAAC;IALAI,YAAY,GAAAD,YAAA,CAAZC,YAAY;EAMd,OAAO,aAAaR,IAAI,CAACH,eAAe,CAACY,QAAQ,EAAE;IACjDC,KAAK,EAAEF,YAAY;IACnBL,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ;AACAQ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGZ,QAAQ,CAACa,SAAS,CAAC,yBAAyB;EAClF;EACA;EACA;EACA;EACA;AACF;AACA;EACEX,QAAQ,EAAER,SAAS,CAACoB,IAAI;EACxB;AACF;AACA;EACEV,WAAW,EAAEV,SAAS,CAACqB,IAAI;EAC3B;AACF;AACA;EACEV,YAAY,EAAEX,SAAS,CAACsB,IAAI;EAC5B;AACF;AACA;AACA;EACEb,IAAI,EAAET,SAAS,CAACqB;AAClB,CAAC,GAAG,KAAK,CAAC;AACV,IAAIL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC;EACAZ,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC,GAAGL,SAAS,CAACK,QAAQ,CAACa,SAAS,CAAC;AAC5D;AACA,SAASb,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}